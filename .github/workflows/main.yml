name: Create full Release

on:
  push:
    branches:
      - main
env:
  NAMESPACE: tester ###  the namespace where you want to deploy the test environment

jobs: ##
  calculate_new_tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set_tag.outputs.NEW_TAG }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure all tags are fetched

      - name: Calculate new tag
        id: set_tag
        run: |
          LAST_TAG=$(git describe --abbrev=0 --tags)
          MAJOR=$(echo $LAST_TAG | awk -F'.' '{print $1}')
          MINOR=$(echo $LAST_TAG | awk -F'.' '{print $2}')
          PATCH=$(echo $LAST_TAG | awk -F'.' '{print $3}')
          NEXT_PATCH=$((PATCH + 1))
          NEW_TAG="$MAJOR.$MINOR.$NEXT_PATCH"
          echo "new tag is: $NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_OUTPUT

  tag_the_commit:
    needs: calculate_new_tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.SECRET_GITHUB_TOKEN }}
          custom_tag: ${{ needs.calculate_new_tag.outputs.tag }}
          tag_prefix: ""

  build_and_push_image:
    needs: calculate_new_tag
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure all tags are fetched
        
      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: harbor.getapp.sh
          username: "${{ secrets.REGISTRY_USERNAME }}"
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build image and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v5
        with:
          # path to the Dockerfile
          file: Dockerfile
          context: .
          tags: ${{ secrets.REGISTRY_URL }}/getapp-dev/tester:${{ needs.calculate_new_tag.outputs.tag }}
          push: true
          build-args: api_version_tag=${{ needs.calculate_new_tag.outputs.tag }}



  deploy_on_AKS:
    needs: 
      - build_and_push_image
      - calculate_new_tag
      - tag_the_commit
    name: Deploy on AKS 
    env:
      RELEASE_TAG: ${{ needs.calculate_new_tag.outputs.tag }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main        
          fetch-depth: 0 # Important for getting all tags and history
                
      - name: Set up kubectl
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config
          
          # Test the connection
          kubectl cluster-info

      - name: Deploy to kubernetes 
        env:
          RELEASE_TAG: ${{ needs.calculate_new_tag.outputs.tag }}
          NAMESPACE: tester
        run: |
          echo "$RELEASE_TAG"
          helm upgrade --install $NAMESPACE ./k8s/helm/$NAMESPACE \
            --namespace $NAMESPACE \
            --create-namespace \
            --set image.tag=$RELEASE_TAG

        
